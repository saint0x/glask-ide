<?xml version="1.0" encoding="UTF-8"?>
<ToolRegistry>
    <Categories>
        <Category name="code_analysis">
            <Description>Tools for analyzing and understanding code</Description>
            <Priority>1</Priority>
        </Category>
        <Category name="code_generation">
            <Description>Tools for generating and modifying code</Description>
            <Priority>2</Priority>
        </Category>
        <Category name="memory_management">
            <Description>Tools for managing interaction history and preferences</Description>
            <Priority>3</Priority>
        </Category>
        <Category name="system">
            <Description>Core system tools and utilities</Description>
            <Priority>0</Priority>
        </Category>
    </Categories>

    <Tools>
        <Tool name="CodeService.SemanticSearch">
            <Category>code_analysis</Category>
            <Description>Performs semantic code search using embeddings</Description>
            <Implementation>src/services/code/semantic-search.ts</Implementation>
            <Dependencies>
                <Dependency>@vscode/vscode-languageserver-protocol</Dependency>
                <Dependency>@vscode/vscode-languageserver-types</Dependency>
            </Dependencies>
            <Config>
                <MaxResults>100</MaxResults>
                <MinConfidence>0.7</MinConfidence>
                <UseCache>true</UseCache>
            </Config>
            <Stats>
                <SuccessRate>0.95</SuccessRate>
                <AverageLatency>250</AverageLatency>
                <CacheHitRate>0.8</CacheHitRate>
            </Stats>
        </Tool>

        <Tool name="CodeService.GrepSearch">
            <Category>code_analysis</Category>
            <Description>Performs text-based code search using regex patterns</Description>
            <Implementation>src/services/code/grep-search.ts</Implementation>
            <Dependencies>
                <Dependency>ripgrep</Dependency>
            </Dependencies>
            <Config>
                <MaxResults>500</MaxResults>
                <ContextLines>2</ContextLines>
                <UseRegex>true</UseRegex>
            </Config>
            <Stats>
                <SuccessRate>0.98</SuccessRate>
                <AverageLatency>100</AverageLatency>
                <CacheHitRate>0.6</CacheHitRate>
            </Stats>
        </Tool>

        <Tool name="CodeService.EditCode">
            <Category>code_generation</Category>
            <Description>Edits code with proper formatting and validation</Description>
            <Implementation>src/services/code/edit.ts</Implementation>
            <Dependencies>
                <Dependency>prettier</Dependency>
                <Dependency>@typescript-eslint/parser</Dependency>
            </Dependencies>
            <Config>
                <BackupFiles>true</BackupFiles>
                <ValidateChanges>true</ValidateChanges>
                <FormatOnSave>true</FormatOnSave>
            </Config>
            <Stats>
                <SuccessRate>0.92</SuccessRate>
                <AverageLatency>300</AverageLatency>
                <ValidationRate>0.95</ValidationRate>
            </Stats>
        </Tool>

        <Tool name="CodeService.OptimizeCode">
            <Category>code_generation</Category>
            <Description>Optimizes code for better performance</Description>
            <Implementation>src/services/code/optimize.ts</Implementation>
            <Dependencies>
                <Dependency>terser</Dependency>
                <Dependency>typescript</Dependency>
            </Dependencies>
            <Config>
                <OptimizationLevels>["balanced", "size", "speed"]</OptimizationLevels>
                <PreserveComments>true</PreserveComments>
                <MinifyIdentifiers>false</MinifyIdentifiers>
            </Config>
            <Stats>
                <SuccessRate>0.88</SuccessRate>
                <AverageLatency>500</AverageLatency>
                <ImprovementRate>0.75</ImprovementRate>
            </Stats>
        </Tool>

        <Tool name="CodeService.AnalyzeCode">
            <Category>code_analysis</Category>
            <Description>Analyzes code for patterns, complexity, and quality</Description>
            <Implementation>src/services/code/analyze.ts</Implementation>
            <Dependencies>
                <Dependency>@typescript-eslint/parser</Dependency>
                <Dependency>eslint</Dependency>
                <Dependency>complexity-report</Dependency>
            </Dependencies>
            <Config>
                <Metrics>["complexity", "maintainability", "duplication"]</Metrics>
                <DetailLevel>high</DetailLevel>
                <IncludeVisualizations>true</IncludeVisualizations>
            </Config>
            <Stats>
                <SuccessRate>0.96</SuccessRate>
                <AverageLatency>400</AverageLatency>
                <AccuracyRate>0.92</AccuracyRate>
            </Stats>
        </Tool>

        <Tool name="CodeService.FindIssues">
            <Category>code_analysis</Category>
            <Description>Identifies potential issues and bugs in code</Description>
            <Implementation>src/services/code/issues.ts</Implementation>
            <Dependencies>
                <Dependency>eslint</Dependency>
                <Dependency>typescript</Dependency>
            </Dependencies>
            <Config>
                <SeverityLevels>["error", "warning", "info"]</SeverityLevels>
                <IncludeStyleIssues>true</IncludeStyleIssues>
                <AutoFix>false</AutoFix>
            </Config>
            <Stats>
                <SuccessRate>0.94</SuccessRate>
                <AverageLatency>350</AverageLatency>
                <FalsePositiveRate>0.05</FalsePositiveRate>
            </Stats>
        </Tool>

        <Tool name="CodeService.CompleteCode">
            <Category>code_generation</Category>
            <Description>Provides intelligent code completion suggestions</Description>
            <Implementation>src/services/code/complete.ts</Implementation>
            <Dependencies>
                <Dependency>@vscode/vscode-languageserver-protocol</Dependency>
                <Dependency>typescript</Dependency>
            </Dependencies>
            <Config>
                <MaxSuggestions>5</MaxSuggestions>
                <ContextLines>10</ContextLines>
                <UseTypeInformation>true</UseTypeInformation>
            </Config>
            <Stats>
                <SuccessRate>0.89</SuccessRate>
                <AverageLatency>200</AverageLatency>
                <AcceptanceRate>0.82</AcceptanceRate>
            </Stats>
        </Tool>

        <Tool name="CodeService.SuggestImprovements">
            <Category>code_generation</Category>
            <Description>Suggests code improvements and refactoring options</Description>
            <Implementation>src/services/code/suggest.ts</Implementation>
            <Dependencies>
                <Dependency>typescript</Dependency>
                <Dependency>eslint</Dependency>
            </Dependencies>
            <Config>
                <Categories>["performance", "readability", "maintainability"]</Categories>
                <MaxSuggestions>3</MaxSuggestions>
                <IncludeExamples>true</IncludeExamples>
            </Config>
            <Stats>
                <SuccessRate>0.87</SuccessRate>
                <AverageLatency>450</AverageLatency>
                <ImplementationRate>0.70</ImplementationRate>
            </Stats>
        </Tool>

        <Tool name="MemoryTool.addEntry">
            <Category>memory_management</Category>
            <Description>Stores new entries in the interaction memory</Description>
            <Implementation>src/services/memory/store.ts</Implementation>
            <Dependencies>
                <Dependency>@types/node</Dependency>
            </Dependencies>
            <Config>
                <MaxEntrySize>1048576</MaxEntrySize>
                <Compression>true</Compression>
                <Encryption>true</Encryption>
            </Config>
            <Stats>
                <SuccessRate>0.99</SuccessRate>
                <AverageLatency>50</AverageLatency>
                <CompressionRatio>0.6</CompressionRatio>
            </Stats>
        </Tool>

        <Tool name="MemoryTool.searchEntries">
            <Category>memory_management</Category>
            <Description>Searches and retrieves entries from interaction memory</Description>
            <Implementation>src/services/memory/search.ts</Implementation>
            <Dependencies>
                <Dependency>@types/node</Dependency>
            </Dependencies>
            <Config>
                <MaxResults>50</MaxResults>
                <UseCache>true</UseCache>
                <SearchTimeout>5000</SearchTimeout>
            </Config>
            <Stats>
                <SuccessRate>0.97</SuccessRate>
                <AverageLatency>150</AverageLatency>
                <CacheHitRate>0.85</CacheHitRate>
            </Stats>
        </Tool>

        <Tool name="MemoryTool.updateEntry">
            <Category>memory_management</Category>
            <Description>Updates existing entries in the interaction memory</Description>
            <Implementation>src/services/memory/update.ts</Implementation>
            <Dependencies>
                <Dependency>@types/node</Dependency>
            </Dependencies>
            <Config>
                <ValidateUpdates>true</ValidateUpdates>
                <KeepHistory>true</KeepHistory>
                <MaxHistorySize>10</MaxHistorySize>
            </Config>
            <Stats>
                <SuccessRate>0.98</SuccessRate>
                <AverageLatency>100</AverageLatency>
                <ConflictRate>0.02</ConflictRate>
            </Stats>
        </Tool>
    </Tools>

    <GlobalStats>
        <TotalTools>11</TotalTools>
        <AverageSuccessRate>0.94</AverageSuccessRate>
        <AverageLatency>259</AverageLatency>
        <LastUpdated>2024-03-20T10:30:00Z</LastUpdated>
    </GlobalStats>
</ToolRegistry> 